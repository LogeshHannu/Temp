name: Enforce PR Approval Rules

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches:
      - develop

jobs:
  check-approvals:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read
      contents: read

    steps:
      - name: Check PR Approval Rules
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const approvals = reviews.data.filter(r => r.state === 'APPROVED');
            const approvers = approvals.map(r => r.user.login);

            const prAuthor = pr.data.user.login;
            const requiredApprover = 'LogeshHannu';        // User X
            const soleTeamMember = 'logeshhannur-bit';     // Only other team member

            let valid = false;

            if (prAuthor === requiredApprover) {
              // PR by X → must be approved by team member only
              valid = approvers.includes(soleTeamMember);
            } else if (prAuthor === soleTeamMember) {
              // PR by team member → must be approved only by X
              valid = approvers.length === 1 && approvers[0] === requiredApprover;
            } else {
              // PR by anyone else → must be approved only by X (not by team member)
              valid = approvers.length === 1 && approvers[0] === requiredApprover;
            }

            console.log(`PR Author: ${prAuthor}`);
            console.log(`Approvers: ${approvers}`);
            console.log(`Validation Result: ${valid ? '✅ Passed' : '❌ Failed'}`);

            if (!valid) {
              core.setFailed('❌ Invalid PR approval. Approval rules not met.');
            } else {
              console.log('✅ PR approval is valid.');
            }
