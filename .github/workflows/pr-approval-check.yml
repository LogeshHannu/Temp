name: Enforce PR Approval Rules

on:
  pull_request:
    types: [submitted]

jobs:
  check-approval:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Info
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const approvals = reviews.data.filter(r => r.state === 'APPROVED');
            const approvers = approvals.map(r => r.user.login);
            
            const prAuthor = pr.data.user.login;
            const requiredApprover = 'LogeshHannu'; // ðŸ‘ˆ Replace with GitHub username of X
            const developTeam = ['logeshhannur-bit']; // ðŸ‘ˆ Replace with usernames (excluding X)

            let valid = false;

            if (prAuthor === requiredApprover) {
              // X created PR â†’ must be approved by someone else from the team
              valid = approvers.some(user => developTeam.includes(user));
            } else {
              // Anyone else created PR â†’ must be approved only by X
              valid = approvers.length === 1 && approvers[0] === requiredApprover;
            }

            if (!valid) {
              core.setFailed(`Invalid PR approval. Check rules.`);
            } else {
              console.log('âœ… Approval valid.');
            }
